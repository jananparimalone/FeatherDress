import RPi.GPIO as GPIO
import time

# Setup
GPIO.setmode(GPIO.BCM)

# Define the GPIO pins for each servo
servo_pins = [17, 18, 27, 22, 23, 24]  # GPIO pins for six servos

# Set up the pins for output and PWM
pwm = []
for pin in servo_pins:
    GPIO.setup(pin, GPIO.OUT)
    pwm.append(GPIO.PWM(pin, 50))  # 50 Hz PWM frequency

# Start PWM with 0 duty cycle (off)
for p in pwm:
    p.start(0)

# Function to set all servos to the same angle direction
def set_servos_angle(angle):
    # Calculate the duty cycle for each servo
    duty_cycles = [
        2 + (angle / 18),  # Normal angle mapping for first servo
        2 + ((180 - angle) / 18),  # Reverse angle mapping for second servo
        2 + (angle / 18),  # Normal angle mapping for third servo
        2 + ((180 - angle) / 18),  # Reverse angle mapping for fourth servo
        2 + (angle / 18),  # Normal angle mapping for fifth servo
        2 + ((180 - angle) / 18)  # Reverse angle mapping for sixth servo
    ]

    # Update all servos at the same time
    for i in range(len(servo_pins)):
        GPIO.output(servo_pins[i], True)
        pwm[i].ChangeDutyCycle(duty_cycles[i])

    time.sleep(0.5)  # Hold for a short time to allow servos to reach position

    # Stop sending signal to servos
    for i in range(len(servo_pins)):
        GPIO.output(servo_pins[i], False)
        pwm[i].ChangeDutyCycle(0)

# Move all servos to specific angles simultaneously
set_servos_angle(0)    # Move all servos to 0 degrees
time.sleep(1)
set_servos_angle(90)   # Move all servos to 90 degrees
time.sleep(1)
set_servos_angle(180)  # Move all servos to 180 degrees
time.sleep(1)

# Stop PWM and clean up GPIO
for p in pwm:
    p.stop()
GPIO.cleanup()
